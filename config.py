import numpy as np
from retro import make

BG_COLOUR = (144, 72, 17)
BALL_COLOUR = (236, 236, 236)
LEFT_GUY_COLOUR = (213, 130, 74)
RIGHT_GUY_COLOUR = (92, 186, 92)

GAME_BOTTOM = 194
GAME_TOP = 34
SCALED_PADDLE_HEIGHT = 16.0
FPS = 60
GAME_PLAYABLE_HEIGHT = GAME_BOTTOM - GAME_TOP
GAME_WIDTH = 160

RIGHT_ACTION_START = 4
RIGHT_ACTION_END = 6
LEFT_ACTION_END = 8
LEFT_PLAYER_START_BUTTON = -1
RIGHT_PLAYER_START_BUTTON = 0

BLANK_ACTION = np.zeros(shape=(16,), dtype=np.int)
BLANK_ACTION[LEFT_PLAYER_START_BUTTON] = 1
BLANK_ACTION[RIGHT_PLAYER_START_BUTTON] = 1

N_CLASSES = 2
ALL_ACTIONS = np.eye(N_CLASSES, dtype=np.int)

TIMEOUT_THRESH = 2_000

NETWORK_SHAPE = [
    6, 2, 2
]

BIAS = True

PROBABILITY_OF_MUTATING_A_SINGLE_GENE = 0.9
GAUSSIAN_MUTATION_SIGMA = 0.9
GAUSSIAN_MUTATION_MEAN = 0
GAUSSIAN_MUTATION_PROBABILITY = 0.9

CROSSOVER_BLEND_PROBABILITY = 0.9
CROSSOVER_BLEND_ALPHA = 0.9

# OFTEN CHANGED
GENERATIONS_BEFORE_SAVE = 2
GAMES_TO_PLAY = 3
POPULATION_SIZE = 16

TOURNAMENT_SIZE = POPULATION_SIZE // 4
HALL_OF_FAME_AMOUNT = TOURNAMENT_SIZE

RENDER = False
WIN_SCORE = 3
TIME_SCALAR = 100.0
GAME_NAME = 'Pong-Atari2600'

# GAME_1_PLAYER = RetroWrapper(GAME_NAME, players=1)
GAME_2_PLAYER = make(GAME_NAME, state='Start.2P', players=2)
